select customers.name as 'Customers'
from customers
where customers.id not in
(
    select customerid from orders
);
select name customers from customers c left join orders o on c.id=o.customerid where o.customerid is null
select class from courses group by class HAVING COUNT(distinct student) >= 5;

SELECT wt1.Id 
FROM Weather wt1, Weather wt2
WHERE wt1.Temperature > wt2.Temperature AND 
      TO_DAYS(wt1.DATE)-TO_DAYS(wt2.DATE)=1;
    
      
datediff(

ROWNUM
select salary as secondhighestsalary from (select salary, ROWNUM AS RN  from employee order
 by salary asc) where RN = 2
 
 MAX
 SELECT max(Salary) secondhighestsalary
FROM Employee
WHERE Salary < (SELECT max(Salary) FROM Employee)

UPDATE dbo.TestStudents  
SET LASTNAME = 
( CASE  
WHEN (LASTNAME = 'AAA') THEN 'BBB' 
WHEN (LASTNAME = 'CCC') THEN 'DDD' 
WHEN (LASTNAME = 'EEE') THEN 'FFF' 
ELSE  (LASTNAME)
END )

SELECT * FROM Customers LIMIT 3; //first tree

distinct
select distinct salary from Employee order by salary desc

SUBSTR
SELECT DISTINCT CITY FROM STATION WHERE LOWER(SUBSTR(CITY,LENGTH(CITY),1)) IN ;

avarage => AVG()

ROUND number ROUND (

The purpose of the Oracle CEIL function is to return the smallest integer value greater than or equal to the supplied number. ...

CONCAT( string1, string2 )


Apostrophe  - EUGENE O'NEILL
select yr,subject,winner from nobel where winner = 'EUGENE O''NEILL'





https://sqlzoo.net/wiki/SELECT_from_Nobel_Tutorial



List each continent and the name of the country that comes first alphabetically.
SELECT continent, name FROM world x WHERE name <= ALL(SELECT name FROM world y WHERE x.continent = y.continent);

Find the continents where all countries have a population <= 25000000. Then find the names of the countries associated with these continents. Show name, continent and population.
SELECT name, continent, population FROM world WHERE continent IN (SELECT continent FROM world  x WHERE 25000000 >= (SELECT MAX(population) FROM world y WHERE x.continent = y.continent));

SELECT within SELECT Tutorial read again

COALESCE return the first non-null value





SELECT OrderID, Quantity,
CASE
    WHEN Quantity > 30 THEN "The quantity is greater than 30"
    WHEN Quantity = 30 THEN "The quantity is 30"
    ELSE "The quantity is under 30"
END AS QuantityText
FROM OrderDetails;


